{"version":3,"sources":["components/posts/index.js","pages/posts.js","components/post/index.js","pages/post.js","pages/routes.js","App.js","reportWebVitals.js","index.js"],"names":["getPosts","a","fetch","response","json","PostsList","useState","posts","setPosts","useEffect","data","fetchData","map","post","index","to","id","src","image","alt","title","Posts","getPost","PostDetails","setPost","useParams","Section","red","Img","text","styled","section","props","css","img","Post","AppRoutes","exact","path","element","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAGeA,I,2EAAf,4BAAAC,EAAA,sEAC2BC,MAAM,yCADjC,cACUC,EADV,gBAEiBA,EAASC,OAF1B,oF,sBAKA,I,MAAMC,EAAY,WACd,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAWA,OATAC,qBAAU,WAAM,4CACZ,4BAAAR,EAAA,sEACwBD,IADxB,OACUO,EADV,OAEIC,EAASD,EAAMG,MAFnB,2CADY,yBAAC,WAAD,wBAMZC,KACD,IAGC,kCACKJ,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACP,8BACI,eAAC,IAAD,CAAMC,GAAE,gBAAWF,EAAKG,IAAxB,UACI,qBAAKC,IAAKJ,EAAKK,MAAOC,IAAI,KAC1B,6BAAKN,EAAKO,YAHRN,SCrBpBO,EAAQ,WACV,OACI,mCACA,cAAC,EAAD,O,wBCAOC,E,8EAAf,WAAuBN,GAAvB,eAAAf,EAAA,sEAC2BC,MAAM,mCAAD,OAAoCc,EAApC,UADhC,cACUb,EADV,gBAEiBA,EAASC,OAF1B,oF,sBAKA,IAAMmB,EAAc,WAChB,MAAwBjB,mBAAS,IAAjC,mBAAOO,EAAP,KAAaW,EAAb,KAEQR,EAAOS,cAAPT,GAWR,OATAP,qBAAU,WAAM,4CACZ,4BAAAR,EAAA,sEACuBqB,EAAQN,GAD/B,OACUH,EADV,OAEIW,EAAQX,EAAKH,MAFjB,2CADY,yBAAC,WAAD,wBAMZC,KACD,IAGC,eAACe,EAAD,CAASC,KAAG,EAAZ,UACI,cAAC,IAAD,CAAMZ,GAAG,IAAT,kCACA,gCACI,cAACa,EAAD,CAAKX,IAAKJ,EAAKK,MAAOC,IAAKN,EAAKO,QAChC,6BAAKP,EAAKO,QACV,4BAAIP,EAAKgB,cAMnBH,EAAUI,IAAOC,QAAV,sFAEP,SAAAC,GAAK,OAAIA,EAAML,KAAOM,YAAb,mEAMTL,EAAME,IAAOI,IAAV,8CC1CHC,EAAO,WACT,OACI,cAAC,EAAD,KCAFC,EAAY,kBACd,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,YAAYC,QAAS,cAAC,EAAD,YCGpCC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b1082e8c.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nasync function getPosts() {\n    const response = await fetch('http://localhost:3000/json/posts.json')\n    return await response.json()\n}\n\nconst PostsList = () => {\n    const [posts, setPosts] = useState([])\n\n    useEffect(() => {\n        async function fetchData() {\n            const posts = await getPosts()\n            setPosts(posts.data)\n        }\n\n        fetchData()\n    }, [])\n\n    return (\n        <section>\n            {posts.map((post, index) =>\n                <div key={index}>\n                    <Link to={`/post/${post.id}`}>\n                        <img src={post.image} alt=\"\" />\n                        <h2>{post.title}</h2>\n                    </Link>\n                </div>\n            )}\n        </section>\n    )\n}\n\nexport { PostsList }","import { PostsList } from '../components/posts'\n\nconst Posts = () =>{\n    return (\n        <>\n        <PostsList />\n        </>\n    )\n}\n\nexport { Posts }","import { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport styled, { css } from 'styled-components'\n\nasync function getPost(id) {\n    const response = await fetch(`http://localhost:3000/json/post-${id}.json`)\n    return await response.json()\n}\n\nconst PostDetails = () => {\n    const [post, setPost] = useState({})\n\n    const { id } = useParams()\n\n    useEffect(() => {\n        async function fetchData() {\n            const post = await getPost(id)\n            setPost(post.data)\n        }\n\n        fetchData()\n    }, [])\n\n    return (\n        <Section red>\n            <Link to='/'>Voltar para os posts</Link>\n            <div>\n                <Img src={post.image} alt={post.title} />\n                <h2>{post.title}</h2>\n                <p>{post.text}</p>\n            </div>\n        </Section>\n    )\n}\n\nconst Section = styled.section`\n    background-color: blue;\n    ${props => props.red && css `\n        background-color: red;\n    `}\n    padding: 50px;\n`\n\nconst Img = styled.img`\n    width: 100%;\n`\n\nexport { PostDetails }","import { PostDetails } from '../components/post'\n\nconst Post = () => {\n    return (\n        <PostDetails />\n    )\n}\n\nexport { Post }","import { BrowserRouter, Route, Routes } from \"react-router-dom\"\nimport { Posts } from './posts'\nimport { Post } from './post'\n\nconst AppRoutes = () => (\n    <BrowserRouter>\n        <Routes>\n            <Route exact path='/' element={<Posts />} />\n            <Route exact path='/post/:id' element={<Post />} />\n        </Routes>\n    </BrowserRouter>\n)\n\nexport { AppRoutes }","import './App.css';\nimport { AppRoutes } from './pages/routes'\n\nfunction App() {\n  return (\n    <div>\n      <AppRoutes/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}